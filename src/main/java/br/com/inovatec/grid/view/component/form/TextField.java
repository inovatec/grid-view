/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.inovatec.grid.view.component.form;

import br.com.inovatec.grid.view.component.form.util.JTextFieldLimit;
import br.com.inovatec.grid.view.contract.Field;
import br.com.inovatec.grid.view.values.Colors;
import br.com.inovatec.grid.view.values.Styles;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.JTextField;

/**
 *
 * @author zrobe
 */
public class TextField extends javax.swing.JPanel implements Field {

    /**
     * Creates new form TextField
     */
    public TextField() {
        initComponents();
        init();
    }
    
    /**
     * Creates new form TextField
     * @param text
     */
    public TextField(String text) {
        this();
        this.jTextField.setText(text);
    }
    
    /**
     * Creates new form TextField with limit
     * @param limit
     */
    public TextField(int limit) {
        this();
        this.jTextField.setDocument(new JTextFieldLimit(limit));
    }
    
    private void init() {
        this.jTextField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                
            }

            @Override
            public void focusLost(FocusEvent e) {
                
            }
        });
    }
    
    /**
     * Resetar campo
     */
    public void reset() {
        this.jTextField.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createLineBorder(Colors.COLOR_BORDER_INPUT));
        setLayout(new java.awt.BorderLayout());

        jTextField.setFont(Styles.FONT_FAMILY);
        jTextField.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        add(jTextField, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField;
    // End of variables declaration//GEN-END:variables

    public void setText(String text) {
        this.jTextField.setText(text);
    }

    public String getText() {
        return this.jTextField.getText();
    }

    public JTextField getTextField() {
        return jTextField;
    }
    
    @Override
    public void setEnabled(boolean enable) {
        this.jTextField.setEnabled(enable);
    }
    
}
